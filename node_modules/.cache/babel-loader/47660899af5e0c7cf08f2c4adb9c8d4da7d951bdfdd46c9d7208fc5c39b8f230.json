{"ast":null,"code":"import { createStore } from \"redux\";\nconst items = [\"Позавтракать\", \"Сходить в магазин\", \"Покормить кота\"];\nconst DEFAULT_STATE = {\n  items,\n  done: {},\n  text: \"\"\n};\n\n// actions\nexport const addItem = text => ({\n  type: \"ADD_ITEM\",\n  text\n});\nexport const setText = text => ({\n  type: \"SET_TEXT\",\n  text\n});\nexport const setDone = (index, done) => ({\n  type: \"SET_DONE\",\n  index,\n  done\n});\n// reducer\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      return {\n        ...state,\n        text: \"\",\n        items: [...state.items, action.text]\n      };\n    case \"SET_TEXT\":\n      return {\n        ...state,\n        text: action.text\n      };\n    case \"SET_DONE\":\n      return {\n        ...state,\n        done: {\n          ...state.done,\n          [action.index]: action.done\n        }\n      };\n    default:\n      return state;\n  }\n};\n\n// epics\n\nexport function initStore() {\n  const store = createStore(rootReducer);\n  return store;\n}","map":{"version":3,"names":["createStore","items","DEFAULT_STATE","done","text","addItem","type","setText","setDone","index","rootReducer","state","action","initStore","store"],"sources":["/home/runner/work/Infrastr-dz2/Infrastr-dz2/src/store.ts"],"sourcesContent":["import { createStore } from \"redux\";\n\nexport interface ApplicationState {\n  text: string;\n  items: string[];\n  done: Record<number, boolean>;\n}\n\nconst items = [\"Позавтракать\", \"Сходить в магазин\", \"Покормить кота\"];\n\nconst DEFAULT_STATE = { items, done: {}, text: \"\" };\n\n// actions\nexport const addItem = (text: string) => ({ type: \"ADD_ITEM\", text } as const);\nexport const setText = (text: string) => ({ type: \"SET_TEXT\", text } as const);\nexport const setDone = (index: number, done: boolean) =>\n  ({ type: \"SET_DONE\", index, done } as const);\n\nexport type Action =\n  | ReturnType<typeof addItem>\n  | ReturnType<typeof setText>\n  | ReturnType<typeof setDone>;\n\n// reducer\nconst rootReducer = (\n  state: ApplicationState = DEFAULT_STATE,\n  action: Action\n) => {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      return {\n        ...state,\n        text: \"\",\n        items: [...state.items, action.text],\n      };\n    case \"SET_TEXT\":\n      return {\n        ...state,\n        text: action.text,\n      };\n    case \"SET_DONE\":\n      return {\n        ...state,\n        done: {\n          ...state.done,\n          [action.index]: action.done,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\n// epics\n\nexport function initStore() {\n  const store = createStore<ApplicationState, Action, {}, {}>(rootReducer);\n\n  return store;\n}\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AAQnC,MAAMC,KAAK,GAAG,CAAC,cAAc,EAAE,mBAAmB,EAAE,gBAAgB,CAAC;AAErE,MAAMC,aAAa,GAAG;EAAED,KAAK;EAAEE,IAAI,EAAE,CAAC,CAAC;EAAEC,IAAI,EAAE;AAAG,CAAC;;AAEnD;AACA,OAAO,MAAMC,OAAO,GAAID,IAAY,KAAM;EAAEE,IAAI,EAAE,UAAU;EAAEF;AAAK,CAAC,CAAU;AAC9E,OAAO,MAAMG,OAAO,GAAIH,IAAY,KAAM;EAAEE,IAAI,EAAE,UAAU;EAAEF;AAAK,CAAC,CAAU;AAC9E,OAAO,MAAMI,OAAO,GAAG,CAACC,KAAa,EAAEN,IAAa,MACjD;EAAEG,IAAI,EAAE,UAAU;EAAEG,KAAK;EAAEN;AAAK,CAAC,CAAU;AAO9C;AACA,MAAMO,WAAW,GAAG,YAGf;EAAA,IAFHC,KAAuB,uEAAGT,aAAa;EAAA,IACvCU,MAAc;EAEd,QAAQA,MAAM,CAACN,IAAI;IACjB,KAAK,UAAU;MACb,OAAO;QACL,GAAGK,KAAK;QACRP,IAAI,EAAE,EAAE;QACRH,KAAK,EAAE,CAAC,GAAGU,KAAK,CAACV,KAAK,EAAEW,MAAM,CAACR,IAAI;MACrC,CAAC;IACH,KAAK,UAAU;MACb,OAAO;QACL,GAAGO,KAAK;QACRP,IAAI,EAAEQ,MAAM,CAACR;MACf,CAAC;IACH,KAAK,UAAU;MACb,OAAO;QACL,GAAGO,KAAK;QACRR,IAAI,EAAE;UACJ,GAAGQ,KAAK,CAACR,IAAI;UACb,CAACS,MAAM,CAACH,KAAK,GAAGG,MAAM,CAACT;QACzB;MACF,CAAC;IACH;MACE,OAAOQ,KAAK;EAAC;AAEnB,CAAC;;AAED;;AAEA,OAAO,SAASE,SAAS,GAAG;EAC1B,MAAMC,KAAK,GAAGd,WAAW,CAAmCU,WAAW,CAAC;EAExE,OAAOI,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}